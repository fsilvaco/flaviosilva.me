{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/flavio.silva/dev/personal/flaviosilva.me/app/root.tsx", "/Users/flavio.silva/dev/personal/flaviosilva.me/app/routes/post/$slug.tsx", "../app/api/notion/index.ts", "../app/constants.ts", "../app/utils/getReadyPosts/index.ts", "../app/hooks/use-title.ts", "/Users/flavio.silva/dev/personal/flaviosilva.me/app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { LinksFunction, MetaFunction } from '@remix-run/node'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from '@remix-run/react'\n\nimport styles from './tailwind.css'\n\nexport const links: LinksFunction = () => {\n  return [{ rel: 'stylesheet', href: styles }]\n}\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'Flavio Silva | A software developer',\n  viewport: 'width=device-width,initial-scale=1',\n})\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <link\n          rel=\"icon\"\n          href=\"data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>\uD83C\uDF3F</text></svg>\"\n        />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  )\n}\n", "import type { NotionBlock } from '@9gustin/react-notion-render'\nimport { Render } from '@9gustin/react-notion-render'\nimport type { LoaderFunction } from '@remix-run/node'\nimport { useLoaderData } from '@remix-run/react'\n\nimport { API } from '~/api/notion'\nimport { useTitle } from '~/hooks/use-title'\nimport type { IPost } from '~/types'\n\nimport '@9gustin/react-notion-render/dist/index.css'\ninterface LoaderData {\n  blocks: NotionBlock[]\n  post: IPost\n}\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  const { slug } = params\n  const posts = await API.getPosts()\n\n  const post = posts.find((item) => item.slug === slug)\n\n  const blocks = await API.getBlocks(post?.id)\n\n  return {\n    blocks: blocks,\n    post: post,\n  }\n}\n\nexport default function Post() {\n  const { blocks, post } = useLoaderData<LoaderData>()\n\n  useTitle(post.title)\n\n  return (\n    <div>\n      <h1>{post.title}</h1>\n      <Render blocks={blocks} classNames />\n    </div>\n  )\n}\n", "import { Client } from '@notionhq/client'\nimport slugify from 'slugify'\nimport invariant from 'tiny-invariant'\n\nimport { getReadyPosts } from '~/utils/getReadyPosts'\n\nconst notion = new Client({\n  auth: process.env.NOTION_API_KEY,\n})\nconst databaseId = process.env.NOTION_DATABASE_ID as string\nexport class API {\n  static getPosts = async () => {\n    const response = await notion.databases.query({ database_id: databaseId })\n    // @ts-ignore\n    // FIXME: Solved this Typescript problem\n    const posts = getReadyPosts(response.results)\n\n    posts.map(\n      (item) => (\n        (item.title = item.properties.Name.title[0].plain_text),\n        (item.slug = slugify(item.title, { lower: true }))\n      ),\n    )\n    return posts\n  }\n\n  static getPage = async (pageId?: string) => {\n    invariant(pageId)\n    const response = await notion.pages.retrieve({ page_id: pageId })\n    return response\n  }\n\n  static getBlocks = async (blockId?: string) => {\n    invariant(blockId)\n    const response = await notion.blocks.children.list({\n      block_id: blockId,\n    })\n    return response.results\n  }\n}\n", "export const STATUS_DONE_ID = \"0450b402-58b0-485a-8114-6b4417c1b8a3\";\n", "import { STATUS_DONE_ID } from '~/constants'\n\nimport type { IPost } from '~/types'\n\nexport const getReadyPosts = (posts: IPost[]) => {\n  const readyPosts = posts.filter(\n    ({ properties }) => properties.Status.status?.id === STATUS_DONE_ID,\n  )\n\n  return readyPosts\n}\n", "import { useEffect } from \"react\";\n\nexport const useTitle = (title: string) => {\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n};\n", "import type { LoaderFunction } from '@remix-run/node'\nimport { Link, useLoaderData } from '@remix-run/react'\n\nimport { API } from '~/api/notion'\nimport type { IPost } from '~/types'\n\nexport interface LoaderData {\n  posts: IPost[]\n}\n\nexport const loader: LoaderFunction = async () => {\n  const posts = await API.getPosts()\n\n  return {\n    posts: posts,\n  }\n}\n\n// export default function () {\n//   const { posts } = useLoaderData<LoaderData>()\n\n//   return (\n//     <main>\n//       <ul>\n//         {posts.map(({ id, title, slug }) => (\n//           <li key={id}>\n//             <Link to={`post/${slug}`}>\n//               <article>{title}</article>\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </main>\n//   )\n// }\n", "export default {'version':'90b958bc','entry':{'module':'/build/entry.client-ZKWJT4LP.js','imports':['/build/_shared/chunk-TQNWTK54.js','/build/_shared/chunk-IYRIQ6PI.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-DZ7JH2ES.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-3MCWLRYQ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/post/$slug':{'id':'routes/post/$slug','parentId':'root','path':'post/:slug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/post/$slug-6QNOFKV6.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-90B958BC.js'};", "\nimport * as entryServer from \"/Users/flavio.silva/dev/personal/flaviosilva.me/app/entry.server.tsx\";\nimport * as route0 from \"/Users/flavio.silva/dev/personal/flaviosilva.me/app/root.tsx\";\nimport * as route1 from \"/Users/flavio.silva/dev/personal/flaviosilva.me/app/routes/post/$slug.tsx\";\nimport * as route2 from \"/Users/flavio.silva/dev/personal/flaviosilva.me/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/post/$slug\": {\n      id: \"routes/post/$slug\",\n      parentId: \"root\",\n      path: \"post/:slug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": []
}
